defmodule AshHq.Repo.Migrations.MigrateResources60 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    execute("""
    ALTER TABLE dsls
      DROP COLUMN searchable
    """)

    execute("""
    ALTER TABLE extensions
      DROP COLUMN searchable
    """)

    execute("""
    ALTER TABLE functions
      DROP COLUMN searchable
    """)

    execute("""
    ALTER TABLE guides
      DROP COLUMN searchable
    """)

    execute("""
    ALTER TABLE library_versions
      DROP COLUMN searchable
    """)

    execute("""
    ALTER TABLE mix_tasks
      DROP COLUMN searchable
    """)

    execute("""
    ALTER TABLE modules
      DROP COLUMN searchable
    """)

    execute("""
    ALTER TABLE options
      DROP COLUMN searchable
    """)

    drop_if_exists(index(:options, ["searchable"], name: "options_searchable_index"))

    drop_if_exists(index(:modules, ["searchable"], name: "modules_searchable_index"))

    drop_if_exists(index(:mix_tasks, ["searchable"], name: "mix_tasks_searchable_index"))

    drop_if_exists(
      index(:library_versions, ["searchable"], name: "library_versions_searchable_index")
    )

    drop_if_exists(index(:guides, ["searchable"], name: "guides_searchable_index"))

    drop_if_exists(index(:functions, ["searchable"], name: "functions_searchable_index"))

    drop_if_exists(index(:extensions, ["searchable"], name: "extensions_searchable_index"))

    alter table(:extensions) do
      remove(:order)

      remove(:type)

      remove(:doc_html)

      remove(:doc)

      remove(:default_for_target)

      remove(:target)

      remove(:name)

      remove(:sanitized_name)
    end

    drop_if_exists(
      unique_index(:extensions, [:library_version_id, :name],
        name: "extensions_unique_name_by_library_version_index"
      )
    )

    drop_if_exists(index(:dsls, ["searchable"], name: "dsls_searchable_index"))
  end

  def down do
    create index(:dsls, ["searchable"], using: "GIN")

    create unique_index(:extensions, [:library_version_id, :name],
             name: "extensions_unique_name_by_library_version_index"
           )

    alter table(:extensions) do
      add(:sanitized_name, :text, null: false)

      add(:name, :text, null: false)

      add(:target, :text)

      add(:default_for_target, :boolean, default: false)

      add(:doc, :text, null: false, default: "")

      add(:doc_html, :text)

      add(:type, :text, null: false)

      add(:order, :bigint, null: false)
    end

    create index(:extensions, ["searchable"], using: "GIN")

    create index(:functions, ["searchable"], using: "GIN")

    create index(:guides, ["searchable"], using: "GIN")

    create index(:library_versions, ["searchable"], using: "GIN")

    create index(:mix_tasks, ["searchable"], using: "GIN")

    create index(:modules, ["searchable"], using: "GIN")

    create index(:options, ["searchable"], using: "GIN")

    execute("""
    ALTER TABLE options
      ADD COLUMN searchable tsvector
      GENERATED ALWAYS AS (
        setweight(to_tsvector('english', name), 'A') ||
        setweight(to_tsvector('english', doc), 'D')
      ) STORED;
    """)

    execute("""
    ALTER TABLE modules
      ADD COLUMN searchable tsvector
      GENERATED ALWAYS AS (
        setweight(to_tsvector('english', name), 'A') ||
        setweight(to_tsvector('english', doc), 'D')
      ) STORED;
    """)

    execute("""
    ALTER TABLE mix_tasks
      ADD COLUMN searchable tsvector
      GENERATED ALWAYS AS (
        setweight(to_tsvector('english', name), 'A') ||
        setweight(to_tsvector('english', doc), 'D')
      ) STORED;
    """)

    execute("""
    ALTER TABLE library_versions
      ADD COLUMN searchable tsvector
      GENERATED ALWAYS AS (
        setweight(to_tsvector('english', version), 'A')
      ) STORED;
    """)

    execute("""
    ALTER TABLE guides
      ADD COLUMN searchable tsvector
      GENERATED ALWAYS AS (
        setweight(to_tsvector('english', name), 'A') ||
        setweight(to_tsvector('english', text), 'D')
      ) STORED;
    """)

    execute("""
    ALTER TABLE functions
      ADD COLUMN searchable tsvector
      GENERATED ALWAYS AS (
        setweight(to_tsvector('english', name), 'A') ||
        setweight(to_tsvector('english', doc), 'D')
      ) STORED;
    """)

    execute("""
    ALTER TABLE extensions
      ADD COLUMN searchable tsvector
      GENERATED ALWAYS AS (
        setweight(to_tsvector('english', name), 'A') ||
        setweight(to_tsvector('english', doc), 'D')
      ) STORED;
    """)

    execute("""
    ALTER TABLE dsls
      ADD COLUMN searchable tsvector
      GENERATED ALWAYS AS (
        setweight(to_tsvector('english', name), 'A') ||
        setweight(to_tsvector('english', doc), 'D')
      ) STORED;
    """)
  end
end
