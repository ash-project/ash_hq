<div class="relative min-h-screen flex items-center justify-center overflow-hidden">
  <div class="absolute inset-0 bg-gradient-to-b from-primary-light-900/20 via-primary-dark-900/10 to-primary-light-900/20">
  </div>

  <div class="absolute inset-0 bg-[linear-gradient(rgba(254,19,19,0.2)_1px,transparent_1px),linear-gradient(90deg,rgba(254,19,19,0.2)_1px,transparent_1px)] bg-[size:40px_40px] [mask-image:radial-gradient(ellipse_80%_80%_at_50%_50%,black,transparent)]">
  </div>

  <div class="absolute bottom-0 left-0 right-0 h-[40vh] bg-gradient-to-t to-transparent perspective-grid">
  </div>

  <div class="relative z-10 text-center px-4 sm:px-6 lg:px-8 max-w-3xl mt-24 flex flex-col items-center">
    <div class="">
      <img
        src="/images/ash-logo-side.svg"
        alt="Ash Framework"
        class="w-96 mx-auto mb-8 drop-shadow-[0_0_15px_rgba(255, 87, 87, 0.5)]"
      />
    </div>
    <h1 class="text-3xl sm:text-4xl font-bold mb-6 bg-gradient-to-r from-primary-light-400 via-primary-dark-500 to-primary-light-600 bg-clip-text text-transparent drop-shadow-[0_0_10px_rgba(255,87,87,0.3)]">
      Model your domain,
      <span class="bg-gradient-to-r from-primary-dark-500 to-primary-light-500 bg-clip-text text-transparent">
        derive the rest
      </span>
    </h1>
    <p class="text-xl sm:text-xl text-primary-light-200 mb-4">
      The <a href="https://elixir-lang.org"><span class="text-primary-dark-400">Elixir</span></a>
      backend framework for <a href="https://hexdocs.pm/ash/what-is-ash.html#why-should-i-use-it"><span class="text-primary-dark-400">unparalleled productivity</span></a>.
      <a href="https://hexdocs.pm/ash/design-principles.html">
        <span class="text-primary-dark-400">Declarative tools</span>
      </a>
      that let you <a href="https://www.youtube.com/watch?v=vjnPjrCF4rs"><span class="text-primary-dark-400">stop wasting time and reinventing wheels</span></a>.
      Use with
      <a href="https://phoenixframework.org">
        <span class="text-primary-dark-400">Phoenix LiveView</span>
      </a>
      or build
      <a href="https://hexdocs.pm/ash_graphql/getting-started-with-graphql.html">
        <span class="text-primary-dark-400">APIs in minutes</span>
      </a>
      to support your front-end of choice.
    </p>
    <div class="flex flex-col items-center gap-4 mt-4">
      <a id="github-stars-btn" href="https://github.com/ash-project/ash"
         class="inline-flex items-center gap-2 px-4 py-2 bg-transparent hover:bg-gray-700/30 border border-gray-600 rounded-lg text-white text-sm font-medium transition-colors"
         target="_blank" rel="noopener noreferrer">
        <span>GitHub</span>
      </a>

      <div class="flex flex-col sm:flex-row gap-3 items-center justify-center">
        <a
          href="#get-started"
          class="inline-flex justify-center items-center text-center px-6 py-3 rounded-full bg-gradient-to-r from-primary-light-600 to-primary-dark-600 text-white font-medium hover:from-primary-light-700 hover:to-primary-dark-700 transition-all transform hover:scale-105 shadow-[0_0_20px_#FF5757]"
        >
          Install Now
        </a>

        <a
          href="#ash-animation"
          class="inline-flex justify-center items-center text-center px-6 py-3 rounded-full border border-primary-light-500 text-primary-light-400 font-medium hover:bg-primary-light-500/10 transition-all transform hover:scale-105"
        >
          Learn More
        </a>

        <a
          href="https://livebook.dev/run?url=https%3A%2F%2Fgithub.com%2Fash-project%2Fash_tutorial%2Fblob%2Fmaster%2Foverview.livemd"
          class="inline-flex justify-center items-center text-center px-6 py-3 rounded-full bg-purple-600 text-white font-medium hover:bg-purple-700 transition-all transform hover:scale-105"
        >
          LiveBook Tutorial
        </a>
      </div>
    </div>


  </div>
</div>

<!-- Interactive Animation Section -->
<div id="ash-animation" class="relative py-16">
  <div class="absolute inset-0 bg-gradient-to-b from-primary-light-900/20 via-primary-dark-900/10 to-primary-light-900/20">
  </div>

  <div class="absolute inset-0 bg-[linear-gradient(rgba(254,19,19,0.2)_1px,transparent_1px),linear-gradient(90deg,rgba(254,19,19,0.2)_1px,transparent_1px)] bg-[size:40px_40px] [mask-image:radial-gradient(ellipse_80%_80%_at_50%_50%,black,transparent)]">
  </div>

  <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="backdrop-blur-lg bg-slate-950/50 rounded-2xl border border-primary-light-500/30 p-8">

      <!-- Main Content Container with Fixed Height -->
      <div class="h-[650px]">
        <!-- Stage Description Panel -->
        <div id="stage-description" class="mb-6 mx-0 lg:mx-16 xl:mx-24 p-4 bg-slate-800/50 rounded-lg border border-primary-dark-500/20 transition-all duration-500 ease-in-out h-[130px]" style="display: none;">
          <h3 id="stage-title" class="text-lg font-semibold text-primary-light-400 mb-2"></h3>
          <p id="stage-text" class="text-sm text-gray-300 leading-relaxed overflow-hidden"></p>
        </div>
        <div class="grid lg:grid-cols-2 gap-8">
        <!-- Code Editor -->
        <div class="relative">
          <div class="bg-slate-900/80 rounded-lg p-4 font-mono text-sm lg:text-xs xl:text-sm overflow-x-auto border border-primary-dark-500/20 h-[492px]">
            <div class="flex items-center gap-2 mb-2 pb-2 border-b border-primary-dark-500/20">
              <div class="w-3 h-3 rounded-full bg-red-500/80"></div>
              <div class="w-3 h-3 rounded-full bg-yellow-500/80"></div>
              <div class="w-3 h-3 rounded-full bg-green-500/80"></div>
              <span class="ml-2 text-gray-500 text-xs">lib/my_app/blog/post.ex</span>
            </div>
            <pre id="code-display" class="text-gray-300"><code></code></pre>
          </div>
        </div>
        <!-- Visualization Panel -->
        <div id="visualization-panel" class="relative min-h-[400px]">
        </div>
      </div>
      </div>
      <!-- Progress indicator and controls -->
      <div class="mt-6 flex items-center justify-center gap-4">
        <button id="prev-stage" class="p-2 rounded-full bg-primary-dark-600 hover:bg-primary-dark-700 disabled:opacity-30 disabled:cursor-not-allowed transition-all" disabled>
          <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
        </button>
        <button id="play-pause" class="p-2 rounded-full bg-green-600 hover:bg-green-700 transition-all">
          <svg id="play-icon" class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <svg id="pause-icon" class="w-5 h-5 text-white hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </button>
        <div class="flex gap-2">
          <div class="stage-dot w-2 h-2 rounded-full bg-primary-dark-500/30 transition-all duration-300" data-stage="1"></div>
          <div class="stage-dot w-2 h-2 rounded-full bg-primary-dark-500/30 transition-all duration-300" data-stage="2"></div>
          <div class="stage-dot w-2 h-2 rounded-full bg-primary-dark-500/30 transition-all duration-300" data-stage="3"></div>
          <div class="stage-dot w-2 h-2 rounded-full bg-primary-dark-500/30 transition-all duration-300" data-stage="4"></div>
          <div class="stage-dot w-2 h-2 rounded-full bg-primary-dark-500/30 transition-all duration-300" data-stage="5"></div>
          <div class="stage-dot w-2 h-2 rounded-full bg-primary-dark-500/30 transition-all duration-300" data-stage="6"></div>
          <div class="stage-dot w-2 h-2 rounded-full bg-primary-dark-500/30 transition-all duration-300" data-stage="7"></div>
          <div class="stage-dot w-2 h-2 rounded-full bg-primary-dark-500/30 transition-all duration-300" data-stage="8"></div>
          <div class="stage-dot w-2 h-2 rounded-full bg-primary-dark-500/30 transition-all duration-300" data-stage="9"></div>
        </div>
        <button id="next-stage" class="p-2 rounded-full bg-primary-dark-600 hover:bg-primary-dark-700 disabled:opacity-30 disabled:cursor-not-allowed transition-all">
          <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Book and Newsletter Section (moved) -->
<div class="relative py-12">
  <div class="relative z-10 text-center px-4 sm:px-6 lg:px-8 max-w-3xl mx-auto">
    <div class="mt-8 text-center">
      <a
        href="https://pragprog.com/titles/ldash/ash-framework/"
        class="w-48 mx-auto mb-4 flex flex-col justify-center"
      >
        <img
          src="images/book-beta.jpg"
          alt="New Book Cover"
          class="w-48 shadow-[0_0_30px] rounded-2xl shadow-fuchsia-900"
        />
        <h2 class="text-2xl font-bold mb-4 bg-gradient-to-r from-purple-700 via-fuchsia-500 to-purple-700 bg-clip-text text-transparent drop-shadow-[0_0_10px_rgba(255,87,87,0.3)]">
          Get the book!
        </h2>
      </a>

    </div>

    <div class="mt-8 text-center">
      <div id="custom-substack-embed"></div>
      <p class="mt-2 mb-3 text-sm tracking-wide text-center text-gray-400 rounded-lg ">
        Stay up to date with our weekly newsletter. <br />
        Please remember to<!-- -->
        <span class="font-bold">confirm your email!</span>
        <br />
        <a href="https://ashweekly.substack.com" target="_blank" class="underline">
          View Past Issues
        </a>
      </p>
    </div>
  </div>
</div>
<div class="relative py-24">
  <div class="absolute inset-0 bg-gradient-to-b from-primary-light-900/20 via-primary-dark-900/10 to-primary-light-900/20">
  </div>

  <div class="absolute inset-0 bg-[linear-gradient(rgba(254,19,19,0.2)_1px,transparent_1px),linear-gradient(90deg,rgba(254,19,19,0.2)_1px,transparent_1px)] bg-[size:40px_40px] [mask-image:radial-gradient(ellipse_80%_80%_at_50%_50%,black,transparent)]">
  </div>
  <div class="absolute top-0 left-0 right-0 h-[40vh] bg-gradient-to-b to-transparent perspective-grid-reverse">
  </div>

  <div
    id="get-started"
    class="max-w-5xl mx-auto text-center lg:px-8 backdrop-blur-lg bg-slate-950/50 rounded-2xl border border-primary-light-500/30 p-4"
  >
    <h2 class="text-3xl font-bold text-primary-light-200">Get Your Installer</h2>
    <div id="installer" />

    <div class="flex flex-col justify-center mt-2">
      <label for="app-name">Project Name</label>
      <div>
        <input
          type="text"
          id="app-name"
          value={@app_name}
          class="text-white bg-transparent mt-1 w-64 rounded-lg p-2 shadow-[0_0_20px_#FF5757] ring-1 border-0 outline-none ring ring-[#FF5757] mb-3 text-center"
          placeholder="Project Name"
          oninput="window.appNameChanged(this)"
        />
      </div>
    </div>

    <div id="cant-decide" class="mt-2">
      <button class="text-lg underline cursor-pointer" onclick="window.cantDecide()">
        Feeling stuck? Can't decide?
      </button>
    </div>
    <div id="show-options" class="hidden mt-2">
      <button class="text-lg underline cursor-pointer" onclick="window.showAll()">
        Show all
      </button>
    </div>
    <div id="already-have-an-app" class="mb-2">
      <button
        id="already-have-an-app-button"
        class="text-lg underline cursor-pointer"
        onclick="window.addingToApp()"
      >
        Already have an app?
      </button>
    </div>
    <h2 id="presets-label" class="text-xl font-bold text-primary-light-200">Presets</h2>
    <div id="quickstarts-list" class="flex flex-row flex-wrap gap-2 justify-center mt-2 mb-4">
      <div class="flex flex-row flex-wrap justify-center gap-2 gap-x-2 gap-y-5">
        <label :for={{value, name} <- quickstarts()} id={"quickstart-#{value}"}>
          <span
            id={"quickstart-#{value}-inactive"}
            data-name={value}
            class="inactive-quickstart relative rounded px-4 py-2 border border-primary-dark-500/40 hover:bg-primary-dark-900/50 cursor-pointer"
            onclick={"window.quickStartClicked(this, 'quickstart-#{value}-active', true)"}
          >
            {name}
          </span>
          <span
            id={"quickstart-#{value}-active"}
            data-name={value}
            class="active-quickstart relative hidden rounded px-4 py-2 border border-primary-dark-500/40 bg-primary-dark-500/80 cursor-pointer"
            onclick={"window.quickStartClicked(this, 'quickstart-#{value}-inactive', false)"}
          >
            {name}
          </span>
        </label>
      </div>
    </div>

    <div id="advanced-features" class="border-t border-primary-dark-500/40">
      <div class="flex flex-wrap justify-center gap-2">
        <div
          :for={{category, features} <- features()}
          data-category={category}
          class="feature-category p-2"
        >
          <h3 class="text-lg font-bold mb-2 text-primary-light-200">{category}</h3>
          <div class="flex flex-wrap gap-2 gap-y-2 justify-center">
            <label :for={{value, name} <- features} id={"feature-#{value}"} class="feature">
              <div class="flex flex-col">
                <span
                  id={"feature-#{value}-inactive"}
                  data-name={value}
                  class={"relative inactive-feature rounded px-2 py-2 border  #{if coming_soon?(value), do: "bg-slate-800/70 text-slate-300/70 border-slate-500/40", else: "hover:bg-primary-dark-900/50 cursor-pointer border-primary-dark-500/40"}"}
                  onclick={
                    if !coming_soon?(value),
                      do: "window.featureClicked(this, 'feature-#{value}-active', true)"
                  }
                >
                  {name}
                  <%= if external?(value) do %>
                    <sup>*</sup>
                  <% end %>
                </span>
                <span
                  id={"feature-#{value}-active"}
                  data-name={value}
                  class="relative active-feature hidden rounded px-2 py-2 border border-primary-dark-500/40 bg-primary-dark-500/80 cursor-pointer"
                  onclick={"window.featureClicked(this, 'feature-#{value}-inactive', false)"}
                >
                  {name}
                  <%= if external?(value) do %>
                    <sup>*</sup>
                  <% end %>
                </span>
                <%= if coming_soon?(value) do %>
                  <span class="text-xs text-slate-400 font-extralight italic mt-1">
                    Coming Soon
                  </span>
                <% end %>
              </div>
            </label>
          </div>
        </div>
      </div>
    </div>
    <div id="asterisk-warning" class="text-xs text-slate-400 text-center mt-1 mb-2">
      <sup>*</sup> Is or contains an external package, not maintained by the Ash team.
    </div>
    <div id="dont-worry" class="mb-2 hidden flex flex-col gap-2">
      <p class="text-lg">
        Pick a preset and go. Everything but Phoenix can be
        <a class="text-primary-dark-400 cursor-pointer" onclick="window.addingToApp()">
          installed later.
        </a>
      </p>
      <p class="text-lg">
        All the presets use PostgreSQL, the best database around.
        <a href="https://www.postgresql.org/download/" class="text-primary-dark-400 underline">
          Easy to install, supported everywhere.
        </a>
      </p>
      <p class="text-lg">
        <ul>
          <li></li>
          <li>
            Want to learn about Ash? Try just using
            <button onclick="window.clickOnPreset('postgres')" class="text-primary-dark-400">
              PostgreSQL.
            </button>
          </li>
          <li>
            Excited about
            <button onclick="window.clickOnPreset('live_view')" class="text-primary-dark-400">
              Phoenix LiveView?
            </button>
            Don't worry about the bells and whistles, dive in!
          </li>
          <li>
            Building an API? Start with
            <button onclick="window.clickOnPreset('graphql')" class="text-primary-dark-400">
              GraphQL
            </button>
            or
            <button
              onclick="window.clickOnPreset('json_api')"
              class="text-primary-dark-400"
              href="#install-later"
            >
              JSON:API
            </button>
          </li>
        </ul>
      </p>
    </div>

    <div class="my-4 text-primary-light-200 bg-slate-900/70 rounded-lg text-white py-4 flex justify-center">
      <pre id="selected-features" class="overflow-auto text-left">
              <%= {:safe, """
              sh <(curl '#{@url_base}#{@safe_app_name}') \\
                  && cd #{@safe_app_name}
              """ |> String.trim()} %></pre>
    </div>
    <div id="manual-setup-box" class="flex flex-col hidden mb-8">
      <h2 class="text-1xl font-bold mb-6 text-primary-light-200">
        Some selected features require manual setup:
      </h2>
      <div
        id="manual-setup-links"
        class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 mx-[30%] gap-2"
      >
      </div>
    </div>
    <div id="read-more-box" class="flex flex-col hidden mb-8">
      <h2 class="text-1xl font-bold mb-6 text-primary-light-200">
        Read the docs:
      </h2>
      <div
        id="read-more-links"
        class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 mx-[30%] gap-2"
      >
      </div>
    </div>
    <button
      id="copy-url-button"
      onclick="window.copyUrl()"
      class="plausible-event-name=Install inline-flex items-center px-6 py-3 rounded-full bg-primary-dark-600 text-white font-medium hover:bg-primary-dark-700 transition-all transform hover:scale-105 [&:not(.was-clicked)]:shadow-[0_0_20px_#FF5757] transition-all duration-300 hover:bg-red-600 [&.was-clicked]:scale-95 [&.was-clicked]:bg-green-500"
    >
      <span id="copy-url-button-icon" class="hero-clipboard"></span>
      <span id="copy-url-button-text" class="ml-2">
        Copy
      </span>
    </button>
  </div>

  <div class="mt-12">
    <div class="max-w-5xl mx-auto text-center">
      <h1 class="text-3xl sm:text-4xl font-bold mb-6 bg-gradient-to-r from-primary-light-400 via-primary-dark-500 to-primary-light-600 bg-clip-text text-transparent drop-shadow-[0_0_10px_rgba(255,87,87,0.3)]">
        Trusted
        <span class="bg-gradient-to-r from-primary-dark-500 to-primary-light-500 bg-clip-text text-transparent">
          in production
        </span>
      </h1>
      <div class="bg-slate-950/50 overflow-hidden sm:mx-0 sm:rounded-2xl md:grid-cols-4 backdrop-blur-lg">
        <div class={"grid #{logos_grid()} gap-0.5 justify-center justify-items-center my-12"}>
          <%= for {name, %{href: href, src: src}} <- logos() do %>
            <%= if name == :placeholder do %>
              <div />
            <% else %>
              <a href={href} title={name} alt={name} class="content-center w-full py-2 max-w-36">
                <img class="w-full h-[90%] object-contain" src={src} />
              </a>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <div class="mt-6 z-10" id="upcoming-events">
    <div class="max-w-3xl mx-auto">
      <h1 class="text-center text-3xl sm:text-4xl font-bold mb-6 bg-gradient-to-r from-primary-light-400 via-primary-dark-500 to-primary-light-600 bg-clip-text text-transparent drop-shadow-[0_0_10px_rgba(255,87,87,0.3)]">
        Upcoming
        <span class="bg-gradient-to-r from-primary-dark-500 to-primary-light-500 bg-clip-text text-transparent">
          events
        </span>
      </h1>
      <ul class="divide-primary-light-500/30 divide-y relative">
        <li :for={event <- @events} class="py-4">
          <a
            href={event.href}
            class="text-xl font-bold hover:text-primary-light-500"
            target="_blank"
          >
            {event.title}
          </a>
          <p class="text-sm text-gray-400">Date: {event.date_in_english}</p>
          <p class="text-md mt-3">
            {{:safe, event.description}}
          </p>
        </li>
      </ul>
    </div>
  </div>
</div>
